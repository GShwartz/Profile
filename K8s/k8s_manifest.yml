---
apiVersion: v1
kind: Namespace
metadata:
  name: gil-namespace

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gil-deployment
  namespace: gil-namespace
spec:
  replicas: 1

  tolerations:
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"

  #strategy:
  #  type: RollingUpdate
  #  rollingUpdate:
  #    maxUnavailable: 0  # Ensure no pods are unavailable during updates
  #    maxSurge: 1        # Allow an additional pod during updates
  
  selector:
    matchLabels:
      app: gil
  
  template:
    metadata:
      labels:
        app: gil
    
    spec:
      containers:
        - name: gil
          image: gil  # Ensure you are using the correct image
          ports:
            - containerPort: 8080  # App is listening on 8080
          
          volumeMounts:
            - name: build-volume
              mountPath: /app/build
          
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            
            initialDelaySeconds: 10
            periodSeconds: 10
          
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            
            initialDelaySeconds: 5
            periodSeconds: 5
          
      volumes:
        - name: build-volume
          persistentVolumeClaim:
            claimName: build-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: gil-service
  namespace: gil-namespace

spec:
  selector:
    app: gil
  
  ports:
    - name: http
      protocol: TCP
      port: 8080           # Expose service on port 8080
      targetPort: 8080      # Forward traffic to the container on port 8080
      nodePort: 30080       # External node port (must be in range 30000-32767)
  
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: gil-namespace

spec:
  replicas: 1

  tolerations:
    - key: "node-role.kubernetes.io/control-plane"
      operator: "Exists"
      effect: "NoSchedule"

  selector:
    matchLabels:
      app: nginx
  
  template:
    metadata:
      labels:
        app: nginx
    
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          
          ports:
            - containerPort: 80
          
          volumeMounts:
            - name: build-volume
              mountPath: /usr/share/nginx/html
          
      volumes:
        - name: build-volume
          persistentVolumeClaim:
            claimName: build-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: gil-namespace

spec:
  selector:
    app: nginx
  
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  
  type: LoadBalancer
